# Definir a pasta de trabalho
setwd(C:\\HDD)
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_heart <- read.csv2("heart.csv")
# Visualizar o dataframe
View(df_heart)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_heart <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_heart)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
library(corrplot)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
library(corrplot)
library(corrplot)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
#library(corrplot)
# Realizar a correlação de Pearson (correlação linear) no dataframe df_HDD
corrplot(cor(df_HDD), type="upper")
install.packages("corrplot")
library(corrplot)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
#library(corrplot)
# Realizar a correlação de Pearson (correlação linear) no dataframe df_HDD
corrplot(cor(df_HDD), type="upper")
install.packages("corrplot")
install.packages("RColorBrewer")
library(RColorBrewer)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
#library(corrplot)
# Realizar a correlação de Pearson (correlação linear) no dataframe df_HDD
corrplot(cor(df_HDD), type="upper")
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Carregar a biblioteca corrplot para o ambiente RStudio
#library(corrplot)
# Realizar a correlação de Pearson (correlação linear) no dataframe df_HDD
corrplot(cor(df_HDD), type="upper")
df_HDD <- subset(heart, select=c(-restecg, -chol,-fbs))
df_HDD <- subset(df_HDD, select=c(-restecg, -chol,-fbs))
view(df_HDD)
View(df_HDD)
df_HDD <- subset(df_HDD, select=c(-restecg, -chol,-fbs))
load("C:/HDD/.RData")
install.packages("corrplot")
library(corrplot)
install.packages("RColorBrewer")
library(RColorBrewer)
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyverse")
library(tidyverse)
source("C:/hdd_oficial/Projeto HDD.R", echo=TRUE)
# Pergunta 1: Qual o percentual de pessoas com e sem doença cardíaca?
round(prop.table(table(df_HDD$target1)),2)
#Chest pain type
pie(df_hdd$cp, main="Chest Pain Type", col=c("red", "green", "yellow", "blue", "orange"), labels=paste(names(df_hdd$cp)))
#Chest pain type
pie(df_HDD$cp, main="Chest Pain Type", col=c("red", "green", "yellow", "blue", "orange"), labels=paste(names(df_HDD$cp)))
#Chest pain type
pie(df_HDD$cp, main="Chest Pain Type", labels=paste(names(df_HDD$cp)))
#Chest pain type
pie(df_HDD$cp, main="Chest Pain Type", labels=paste(names(df_HDD$cp)))
#Chest pain type
ggplot(df_hdd, aes(x = "", y = value, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
#Chest pain type
ggplot(df_HDD, aes(x = "", y = value, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
rlang::last_error()
#Chest pain type
ggplot(df_HDD, aes(x = "", y = target, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
#Chest pain type
ggplot(df_HDD, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
#Chest pain type
df_disease = subset(df_hdd, target1 == 1)
#Chest pain type
df_disease = subset(df_HDD, target1 == 1)
ggplot(df_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
View(df_disease)
#Chest pain type
df_disease = subset(df_HDD, target == 1)
ggplot(df_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Pie chart example", fill = "Tipo de dor no peito") +
theme_void()
#Chest pain type
df_disease = subset(df_HDD, target == 1)
View(df_disease)
df_no_disease = subset(DD, target == 0)
df_no_disease = subset(df_HDD, target == 0)
View(df_no_disease)
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca", fill = "Tipo de dor no peito") +
theme_void()
ggplot(df_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas com doença cardíaca", fill = "Tipo de dor no peito") +
theme_void()
df_disease$percent <- round(df_disease$cp / sum(df_disease$cp) * 100, 1)
df_disease$percent <- round(df_disease$cp / sum(df_disease$target1) * 100, 1)
# Definir a pasta de trabalho
setwd("C:\\HDD")
# Definir a pasta de trabalho
setwd("C:\\hdd_oficial")
# Importar a base de dados para um dataframe
df_HDD <- read.csv("heart.csv")
# Visualizar o dataframe
View(df_HDD)
# Realizar a correlação de Pearson (correlação linear) no dataframe df_HDD
corrplot(cor(df_HDD), type="upper")
source("C:/hdd_oficial/Projeto HDD.R", echo=TRUE)
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito", aes(label=paste0(df_no_disease, "%"))) +
theme_void()
View(df_no_disease)
count(df_no_disease)
count(df_no_disease[0])
count(df_no_disease[1])
number <- count(df_no_disease)
number[0]
number[1]
number[2]
View(number)
#piepercent<- round(100*/sum(x), 1)
nrows(df_no_disease)
#piepercent<- round(100*/sum(x), 1)
nrow(df_no_disease)
#piepercent<- round(100*/sum(x), 1)
nrow(df_disease)
pie(df_no_disease$cp,
lables=no_disease_percent,
main = "Tipo de dor no peito sem doença cardíaca",
legend("topright", df_no_disease$cp))
no_disease_percent
no_disease_percent<- round(100*nrow(df_no_disease)/sum(x), 1)
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
geom_text(aes(label = target1)) +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
geom_text(aes(label = target1),
position = position_stack(vjust = 0.5)) +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
no_disease_percent<- round(100*nrow(df_no_disease)/sum(df_no_disease), 1)
no_disease_percent<- round(100*nrow(df_no_disease)/sum(nrows(df_no_disease)), 1)
no_disease_percent<- round(100*nrow(df_no_disease)/sum(nrow(df_no_disease)), 1)
no_disease_percent
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
ggplot(df_no_disease, aes(x = "", y = target1, fill = cp)) +
geom_bar(stat = "identity") +
geom_text(aes(label=no_disease_percent)) +
coord_polar("y", start=0) +
labs(title = "Tipo de dor no peito em pessoas sem doença cardíaca",
fill = "Tipo de dor no peito") +
theme_void()
x <-  c(21, 62, 10,53)
labels <-  c("London","New York","Singapore","Mumbai")
piepercent<- round(100*x/sum(x), 1)
piepercent
mosaicplot(table(df_no_disease$target1, df_no_disease$cp),
col=c("#754869", "coral", "skyblue", "#423f42", "#ed18c6"),
las=1, main="Tipos de dores no peito em pessoas sem doença cardíaca")
mosaicplot(table(df_HDD$target1, df_HDD$cp),
col=c("#754869", "coral", "skyblue","#423f42", "#ed18c6"),
las=1, main="Tipos de dores no peito")
# Calculate the percentage of each chest pain type
df_cp_target <- df_hdd %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(target1),
disease_percent = disease_count / total * 100)
# Calculate the percentage of each chest pain type
df_cp_target <- df_HDD %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(target1),
disease_percent = disease_count / total * 100)
# Calculate the percentage of each chest pain type
sum(df_no_disease$taregt1)
# Calculate the percentage of each chest pain type
sum(df_no_disease$target1)
# Calculate the percentage of each chest pain type
sum(df_no_disease$target)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(target),
disease_percent = disease_count / total * 100)
View(df_cp_target)
n()
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_percent = total / total * 100)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_percent = n() / total * 100)
total
n()
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(n()),
disease_percent = disease_count / total * 100)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(),
disease_percent = n() / total * 100)
df_cp_target <- df_no_disease %>%
group_by(cp)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(),
disease_percent = n() / total * 100)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_count = sum(),
disease_percent = n() / nrow(df_no_disease) * 100)
df_cp_target <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_percent = n() / nrow(df_no_disease) * 100)
# Calculate the percentage of each chest pain type
df_cp_no_disease <- df_no_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_percent = n() / nrow(df_no_disease) * 100)
View(df_cp_no_disease)
# Create the pie chart
ggplot(df_cp_no_disease, aes(x = "", y = disease_percent, fill = cp)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(disease_percent), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
labs(title = "Pie chart of chest pain type and heart disease",
x = NULL, y = NULL)
# Create the pie chart
ggplot(df_cp_no_disease, aes(x = "", y = disease_percent, fill = cp)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(disease_percent), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
labs(title = "Tipo de dor no peito em pessoas que não possuem doença cardíaca",
x = NULL, y = NULL)
df_cp_disease <- df_disease %>%
group_by(cp) %>%
summarize(total = n(),
disease_percent = n() / nrow(df_disease) * 100)
View(df_cp_disease)
ggplot(df_cp_disease, aes(x = "", y = disease_percent, fill = cp)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(disease_percent), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
labs(title = "Tipo de dor no peito em pessoas que possuem doença cardíaca",
x = NULL, y = NULL)
ggplot(df_cp_disease, aes(x = "", y = disease_percent, fill = cp)) +
geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(disease_percent), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
labs(title = "Tipo de dor no peito em pessoas que possuem doença cardíaca",
x = NULL, y = NULL)
ggplot(df_cp_disease, aes(x = "", y = disease_percent, fill = cp)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(disease_percent), "%")),
position = position_stack(vjust = 0.5)) +
theme_void() +
labs(title = "Tipo de dor no peito em pessoas que possuem doença cardíaca",
x = NULL, y = NULL)
source("C:/hdd_oficial/Projeto HDD.R", echo=TRUE)
#Thalach - Máxima taxa cardíaca alcançada
min(df_hdd$thalach)
#Thalach - Máxima taxa cardíaca alcançada
min(df_HDD$thalach)
#Thalach - Máxima taxa cardíaca alcançada
max(df_HDD$thalach)
df_hdd$thalach_group = cut(df_HDD$thalach, breaks = seq(min(df_HDD$thalach),max(df_HDD$thalach),29))
df_HDD$thalach_group = cut(df_HDD$thalach, breaks = seq(min(df_HDD$thalach),max(df_HDD$thalach),29))
df_HDD$thalach_group = cut(df_HDD$thalach, breaks = seq(min(df_HDD$thalach),max(df_HDD$thalach),30))
df_HDD$thalach_group = cut(df_HDD$thalach, breaks = seq(min(df_HDD$thalach),max(df_HDD$thalach)+1,30))
df_HDD$thalach_group = cut(df_HDD$thalach, breaks = seq(min(df_HDD$thalach),max(df_HDD$thalach)+1,29))
df_HDD$thalach_group = ifelse(df_HDD$thalach <= 60 & df_HDD$thalach >= 100, "normal",
ifelse(df_HDD$thalach > 100, "high", "low"))
df_HDD$thalach_group = ifelse(df_HDD$thalach >= 60 & df_HDD$thalach <= 100, "normal",
ifelse(df_HDD$thalach > 100, "high", "low"))
View(target_by_age)
View(target_by_age)
View(df_disease)
View(df_cp_disease)
View(df_heart)
View(df_no_disease)
target_by_thalach
target_by_thalach = df_HDD %>%
group_by(thalach_group) %>%
summarise(df_HDD_disease = sum(target))
View(target_by_thalach)
target_by_thalach
target_by_thalach_disease = df_HDD %>%
group_by(thalach_group) %>%
summarise(df_HDD_disease = sum(target))
target_by_thalach
target_by_thalach_disease = df_HDD %>%
group_by(thalach_group) %>%
summarise(df_disease = sum(target))
View(target_by_thalach_disease)
target_by_thalach
target_by_thalach_no_disease = df_HDD %>%
group_by(thalach_group) %>%
summarise(df_no_disease = sum(target))
target_by_thalach_no_disease
target_by_thalach
target_by_thalach
View(target_by_thalach)
View(target_by_thalach_disease)
target_by_thalach = df_HDD %>%
group_by(thalach_group) %>%
summarise(df_disease = sum(target))
target_by_thalach
View(target_by_thalach)
View(target_by_thalach)
View(target_by_thalach_disease)
target_by_thalach %>%
ggplot(aes(x=thalach_group, y=df_disease)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
xlab("") + ylab("Qtde de pessoas com doença cardíaca") + ggtitle("Número de pessoas com doença cardíaca com a máxima taxa cardíaca alcançada") + theme_bw()
target_by_thalach = df_disease %>%
group_by(thalach_group) %>%
summarise(df_disease = sum(target))
#Chest pain type
df_disease = subset(df_HDD, target == 1)
df_no_disease = subset(df_HDD, target == 0)
df_HDD$thalach_group = ifelse(df_HDD$thalach >= 60 & df_HDD$thalach <= 100, "normal",
ifelse(df_HDD$thalach > 100, "high", "low"))
target_by_thalach
target_by_thalach = df_disease %>%
group_by(thalach_group) %>%
summarise(df_disease = sum(target))
target_by_thalach
target_by_thalach_no_disease = df_no_disease %>%
group_by(thalach_group) %>%
summarise(df_disease = sum(target))
target_by_thalach_no_disease
target_by_thalach_no_disease = df_no_disease %>%
group_by(thalach_group) %>%
summarise(df_disease = n())
target_by_thalach_no_disease
target_by_thalach_no_disease = df_no_disease %>%
group_by(thalach_group) %>%
summarise(df_no_disease = n())
target_by_thalach_no_disease
target_by_thalach_no_disease %>%
ggplot(aes(x=thalach_group, y=df_no_disease)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
xlab("") + ylab("Qtde de pessoas sem doença cardíaca") + ggtitle("Número de pessoas sem doença cardíaca com a máxima taxa cardíaca alcançada") + theme_bw()
source("C:/hdd_oficial/Projeto HDD.R", echo=TRUE)
